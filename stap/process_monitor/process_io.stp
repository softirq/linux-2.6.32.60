#!/usr/bin/env stap

global io_stat, device
global read_bytes, write_bytes

probe vfs.read.return 
{
    if(pid() == target())
    {
        if($return >0)
        {
            dev = __file_dev($file)
            devname = __find_bdevname(dev, __file_bdev($file))

            io_stat[pid(), execname(), uid(), ppid(), "R"] += $return
            device[pid(), execname(), uid(), ppid(), "R"] = devname
            read_bytes += $return
        }
    }
}

probe vfs.write.return 
{
    if(pid() == target())
    {
        if($return >0)
        {
            dev = __file_dev($file)
            devname = __find_bdevname(dev, __file_bdev($file))

            io_stat[pid(), execname(), uid(), ppid(), "W"] += $return
            device[pid(), execname(), uid(), ppid(), "W"] = devname
            write_bytes += $return
        }
    }
}

probe timer.ms(5000)
{
    foreach ([process,cmd,userid,parent,action] in io_stat- limit 10)
        printf("%8d %8d %8d %25s %8s %4s %12d\n",
        userid,process,parent,cmd,
        device[process,cmd,userid,parent,action],
        action,io_stat[process,cmd,userid,parent,action])

    delete io_stat
    delete device
    read_bytes = 0
    write_bytes = 0
}

probe begin
{
    printf("%8s %8s %8s %25s %8s %4s %12s\n",
        "UID","PID","PPID","CMD","DEVICE","T","BYTES")
}

probe end
{
    printf("process io end.\n");
}
